apiVersion: apps/v1
kind: Deployment
metadata:
  name: capsule
  namespace: cnvrg
  labels:
    app: capsule
spec:
  replicas: 1
  selector:
    matchLabels:
      app: capsule
  template:
    metadata:
      labels:
        app: capsule
    spec:
      serviceAccountName: cnvrg-operator
      containers:
        - name: capsule
          command:
            - ./capsule
            - start
          env:
            - name: CNVRG_CAPSULE_DUMPDIR
              value: /capsule-data
            - name: GIN_MODE
              value: release
          image: docker.io/cnvrg/cnvrg-capsule:${TAG}
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /capsule-data
              name: capsule-data
      volumes:
        - name: capsule-data
          persistentVolumeClaim:
            claimName: capsule
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: capsule
  namespace: cnvrg
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cnvrg-capsule
  namespace: cnvrg
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cnvrg-capsule
  namespace: cnvrg
rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - secrets
    verbs:
    - list
    - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cnvrg-capsule
  namespace: cnvrg
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cnvrg-capsule
subjects:
  - kind: ServiceAccount
    name: cnvrg-capsule
    namespace: cnvrg

